{"version":3,"sources":["../node_modules/@material-ui/core/esm/Button/Button.js","components/ContractAdmin.jsx"],"names":["_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","_ButtonBase__WEBPACK_IMPORTED_MODULE_7__","_utils_helpers__WEBPACK_IMPORTED_MODULE_8__","Button","a","forwardRef","props","ref","children","classes","classNameProp","className","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","_props$type","type","_props$variant","variant","other","Object","text","outlined","contained","primary","secondary","root","textPrimary","textSecondary","outlinedPrimary","outlinedSecondary","containedPrimary","containedSecondary","concat","inherit","colorInherit","createElement","focusRipple","focusVisible","label","__webpack_exports__","theme","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","transition","transitions","create","duration","short","&:hover","textDecoration","backgroundColor","action","hoverOpacity","@media (hover: none)","&$disabled","width","display","alignItems","justifyContent","main","border","getContrastText","grey","boxShadow","shadows","&$focusVisible","&:active","disabledBackground","A100","contrastText","dark","borderColor","sizeSmall","fontSize","pxToRem","sizeLarge","name","_callee","openSnackBar","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","database","unsafeResetDatabase","stop","ContractAdmin","_context__WEBPACK_IMPORTED_MODULE_5__","Consumer","_ref","needsInit","initVaultAndLP","standardTokenApproval","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","onClick","resetDb","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"static/js/27.0eeff8aa.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 16px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: '8px 24px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"type\", \"variant\"]);\n\n  var text = variant === 'text';\n  var outlined = variant === 'outlined';\n  var contained = variant === 'contained';\n  var primary = color === 'primary';\n  var secondary = color === 'secondary';\n  var className = clsx(classes.root, classNameProp, text && [classes.text, primary && classes.textPrimary, secondary && classes.textSecondary], outlined && [classes.outlined, primary && classes.outlinedPrimary, secondary && classes.outlinedSecondary], contained && [classes.contained, primary && classes.containedPrimary, secondary && classes.containedSecondary], size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, fullWidth && classes.fullWidth, {\n    inherit: classes.colorInherit\n  }[color]);\n  return React.createElement(ButtonBase, _extends({\n    className: className,\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import React, { Fragment } from 'react'\nimport { Button, Divider } from '@material-ui/core'\nimport { FundingContext } from '../context'\nimport database from '../db'\n\n\nasync function resetDb(openSnackBar) {\n  await database.unsafeResetDatabase()\n  openSnackBar('success', 'Database has been reset. Refresh the page to populate it')\n}\n\nconst ContractAdmin = () => (\n  <FundingContext.Consumer>\n    {({ needsInit, initVaultAndLP, standardTokenApproval, openSnackBar }) =>\n      <Fragment>\n        <Button color=\"secondary\" variant=\"contained\" onClick={() => resetDb(openSnackBar)}>RESET DATABASE</Button>\n        <Divider />\n        {needsInit && <Button variant=\"outlined\" color=\"secondary\" onClick={initVaultAndLP}>\n          Initialize Contracts\n        </Button>}\n        {needsInit && <Button variant=\"outlined\" color=\"primary\" onClick={standardTokenApproval}>\n          GIVE VAULT TOKEN APPROVAL\n        </Button>}\n      </Fragment>\n    }\n  </FundingContext.Consumer>\n)\n\nexport default ContractAdmin\n"],"sourceRoot":""}