{"version":3,"sources":["utils/ipfs.js","utils/images.js","utils/dates.js","utils/project.js","components/projects/hooks.js","components/projects/queries.js","components/projects/ProjectPledges.jsx"],"names":["ipfsMatcher","Matcher","begin","find","ipfs","IPFS","ipfsHttp","ipfsClient","host","port","protocol","ipfsHttpTheGraph","api-path","window","jsIPFS","on","console","log","bootstrap","add","isIpfs","str","test","captureFile","event","cb","imgCb","stopPropagation","preventDefault","files","target","formattedFiles","formatFileList","saveToIpfs","formattedList","i","length","push","formatForIpfs","file","name","content","type","path","concat","formatForIpfsGateway","ipfsId","progress","prog","then","response","hash","getImageFromIpfs","catch","err","error","uploadFilesToIpfs","_ref","Object","_Users_Barry_projects_status_im_liquid_funding_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","manifest","gateway","fileLists","formatFn","uploadFn","res","_args","arguments","wrap","_context","prev","next","undefined","uploadToIpfsGateway","uploadToIpfs","keys","forEach","k","_Users_Barry_projects_status_im_liquid_funding_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","Buffer","from","sent","abrupt","stop","_x","_x2","apply","this","_ref2","_callee2","_context2","slice","_x3","_ref3","_callee3","_context3","_x4","pinToGateway","_ref5","_callee5","cid","_context5","split","pin","recursive","_x6","_ref6","_callee6","_context6","getFromIpfs","_x7","_x8","_ref7","_callee7","arrayBufferView","blob","img","_context7","getFiles","Uint8Array","Blob","getImageType","URL","createObjectURL","_Users_Barry_projects_status_im_liquid_funding_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_x9","CID","clean","Promise","resolve","reject","get","getFilesWeb","getFilesWebTheGraph","isWeb","includes","formatMedia","__webpack_require__","d","__webpack_exports__","isVideo","typeMap","gif","jpg","png","pdf","suffix","toLowerCase","timeSinceBlock","date","interval","date1","Date","date2","timediff","isNaN","NaN","getFullYear","getMonth","Math","floor","day","hour","minute","second","getDateCreated","daysSince","setDate","getDate","getDateFromTimestamp","ts","pretty","toLocaleString","month","generateChatRoom","formatProjectId","getProjectManifest","getMediaType","setMediaType","getMediaSrc","utils","web3","title","replace","id","toHex","getName","asset","isManifest","assets","JSON","parse","hasManifest","media","url","match","callOrderFns","data","setState","regenerator_default","profile","creationTime","addr","tryIpfsGets","_callee4","index","_args4","_context4","ipfsFn","asyncToGenerator","_x17","debug","_args5","getPledge","dPledge","pledge","fetch","pledgeData","account","profiles","getDelegateProfiles","_callee8","dPledges","resolved","unnested","expanded","_context8","delegatePledges","getDelegatePledgesByProfile","all","unnest","map","useProfileData","_useState","useState","_useState2","slicedToArray","setDelegatePledges","useEffect","fetchAndAddDelegatePledges","projectInfo","_data$profile$project","isPlaying","objectSpread","e","_callee9","currencies","goalToken","allowance","_context9","getAllowanceFromAddress","useProjectData","projectId","_useState3","_useState4","projectAge","setAge","_useState5","_useState6","creator","setCreator","_useState7","_useState8","projectAssets","setAssets","_useState9","_useState10","ipfsReady","setIpfsState","_useState11","_useState12","delegateProfiles","setDelegateProfiles","_useState13","_useState14","authorization","setAuthorization","_useContext","useContext","FundingContext","openSnackBar","syncWithRemote","fetchAndAddDelegateProfiles","getProjectAge","getProjectCreator","getProjectAssets","getAuthorization","useMemo","pledgeLifetimeReceived","gql","_templateObject","pledgesInfosFields","_templateObject2","pledgeFields","_templateObject3","getProfileById","_templateObject4","getProfileWithPledges","_templateObject5","getProjects","_templateObject6","LiquidPledging","methods","mWithdraw","withdraw","confirmPayment","LPVault","PAYING","PAID","pledgeTypes","0","1","2","buttonText","getCommitTime","profileCommitTime","commitTime","Number","time","toLocaleDateString","toLocaleTimeString","styles","theme","card","minWidth","root","_Users_Barry_projects_status_im_liquid_funding_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","display","gridTemplateColumns","gridTemplateRows","gridColumnGap","gridRowGap","fontFamily","typography","breakpoints","up","margin","fontSize","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","textAlign","subText","marginBottom","switchSelect","submissionRoot","textField","width","PledgeInfo","withStyles","classes","values","handleChange","pledgeType","pledgeId","value","notPaid","notPaying","amtFormatter","getHumanAmountFormatter","token","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","className","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","color","gutterBottom","amount","getTokenLabel","variant","component","toDecimal","pledgeState","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","style","justifyContent","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","control","_material_ui_core__WEBPACK_IMPORTED_MODULE_16__","checked","onChange","label","Title","alignSelf","fontWeight","_material_ui_core__WEBPACK_IMPORTED_MODULE_17__","getSendFn","filteredPledges","getArgs","formattedPledges","pledges","p","padLeft","substring","filter","returnValues","idPayment","SubmissionSection","formik__WEBPACK_IMPORTED_MODULE_6__","onSubmit","_ref4","sendFn","args","toSend","estimatedGas","estimateGas","send","gas","finally","errors","touched","handleSubmit","setFieldValue","setStatus","status","key","_material_ui_core__WEBPACK_IMPORTED_MODULE_18__","height","useStyles","makeStyles","CenteredTabs","pledged","paying","paid","setPledgeType","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_20__","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_21__","newValue","indicatorColor","textColor","centered","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_22__","_ref8","_Users_Barry_projects_status_im_liquid_funding_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","params","_useQuery","useQuery","variables","loading","_useProjectData","_base_Loading__WEBPACK_IMPORTED_MODULE_28__","message","selectedPledges"],"mappings":"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","file":"static/js/16.93d28e63.chunk.js","sourcesContent":["import IPFS from 'ipfs'\nimport ipfsClient from 'ipfs-http-client'\nimport { Buffer } from 'buffer'\nimport { Matcher } from '@areknawo/rex'\nimport { getImageType } from './images'\n\nconst ipfsMatcher = new Matcher().begin().find('ipfs/')\nexport const ipfs = new IPFS()\nconst ipfsHttp = ipfsClient({ host: 'test-ipfs.status.im', port: '2053', protocol: 'https' })\nconst ipfsHttpTheGraph = ipfsClient({ host: 'api.thegraph.com', 'api-path': '/ipfs/api/v0/', protocol: 'https', port: '443' })\n\nwindow.ipfsHttp = ipfsHttp\nwindow.ipfsHttpTheGraph = ipfsHttpTheGraph\nwindow.jsIPFS = ipfs\n\nipfs.on('ready', () => {\n  console.log('Node is ready to use!')\n  // Add status ipfs node as peer\n  ipfs.bootstrap.add('/ip4/35.188.209.83/tcp/4001/ipfs/QmZqW6QHdDVyHMvYktpA1PAuKgvqhwumbuFqFB5URedSbA')\n})\n\n\nexport const isIpfs = str => ipfsMatcher.test(str)\nexport const captureFile = (event, cb, imgCb) => {\n  event.stopPropagation()\n  event.preventDefault()\n  const files = event.target.files\n  const formattedFiles = formatFileList(files)\n  console.log({files, formattedFiles})\n  saveToIpfs(formattedFiles, cb, imgCb)\n}\n\nexport const formatFileList = files => {\n  const formattedList = []\n  for (let i=0; i<files.length; i++) {\n    formattedList.push(formatForIpfs(files[i]))\n  }\n  return formattedList\n}\n\nexport const formatForIpfs = file => {\n  const { name, type: _type } = file\n  const content = file\n  return {\n    path:  `/root/${name}`,\n    content\n  }\n}\n\nexport const formatForIpfsGateway = file => {\n  const { name, type: _type } = file\n  const content = file\n  return {\n    path:  `/root/${name}`,\n    content\n  }\n}\n\nexport const saveToIpfs = (files, cb, imgCb) => {\n  let ipfsId\n  ipfs.add(files, { progress: (prog) => console.log(`received: ${prog}`) })\n    .then((response) => {\n      console.log(response)\n      ipfsId = response[0].hash\n      cb(`ipfs/${ipfsId}`)\n      getImageFromIpfs(ipfsId, imgCb)\n    }).catch((err) => {\n      console.error(err)\n    })\n}\n\nexport const uploadFilesToIpfs = async (files, manifest, gateway = false) => {\n  let fileLists = []\n  const formatFn = gateway ? formatForIpfsGateway : formatForIpfs\n  const uploadFn = gateway ? uploadToIpfsGateway : uploadToIpfs\n  Object.keys(files).forEach(k => {\n    fileLists = [...fileLists, formatFn(files[k][0])]\n  })\n  fileLists.push({\n    path: '/root/manifest.json', content: Buffer.from(manifest)\n  })\n  const res = await uploadFn(fileLists)\n  return res\n}\n\nexport const uploadToIpfs = async files => {\n  const res = await ipfs.add(\n    files,\n    {\n      progress: (prog) => console.log(`received: ${prog}`)\n    }\n  )\n  return `ipfs/${res.slice(-1)[0].hash}`\n}\n\nexport const uploadToIpfsGateway = async files => {\n  const res = await ipfsHttpTheGraph.add(files)\n  return `ipfs/${res.slice(-1)[0].hash}`\n}\n\nexport const pinToIpfs = async hash => {\n  const cid = hash.split('/').slice(-1)[0]\n  const res = await ipfs.pin.add(cid, { recursive: false })\n  console.log({res})\n}\n\nexport const pinToGateway = async hash => {\n  const cid = hash.split('/').slice(-1)[0]\n  const res = await ipfsHttp.pin.add(cid, { recursive: true })\n  console.log({res})\n}\n\nexport const getImageFromIpfs = async (hash, cb) => {\n  const res = await getFromIpfs(hash)\n  cb(res)\n}\n\nexport const getFromIpfs = async hash => {\n  const files = await getFiles(hash)\n  const file = files.slice(-1)[0]\n  const { content } = file\n  const arrayBufferView = new Uint8Array(content)\n  const blob = new Blob([arrayBufferView], { type: getImageType(file) })\n  const img = URL.createObjectURL(blob)\n  return { ...file, img }\n}\n\nexport const getFiles = CID => {\n  const clean = CID.split('/').slice(-1)[0]\n  return new Promise(function(resolve, reject) {\n    ipfs.get(clean, (err, files) => {\n      if (err) reject(err)\n      else resolve(files)\n    })\n  })\n}\n\nexport const getFilesWeb = CID => {\n  const clean = CID.split('/').slice(-1)[0]\n  return new Promise(function(resolve, reject) {\n    ipfsHttp.get(clean, (err, files) => {\n      if (err) reject(err)\n      else resolve(files)\n    })\n  })\n}\n\nexport const getFilesWebTheGraph = CID => {\n  const clean = CID.split('/').slice(-1)[0]\n  return new Promise(function(resolve, reject) {\n    ipfsHttpTheGraph.get(clean, (err, files) => {\n      if (err) reject(err)\n      else resolve(files)\n    })\n  })\n}\n\nexport const isWeb = str => str.includes('http')\nexport const formatMedia = str => {\n  return isWeb(str) ? str : `/root/${str}`\n}\n","const typeMap = {\n  'gif': 'image/gif',\n  'jpg': 'image/jpeg',\n  'png': 'image/png',\n  'pdf': 'application/pdf'\n}\n\nexport const getImageType = file => {\n  const suffix = file.split('.').slice(-1)[0].toLowerCase()\n  return typeMap[suffix] ? typeMap[suffix] : 'image/jpeg'\n}\n\nexport const isVideo = file => file.type.includes('video')\n","export function timeSinceBlock(date=false, interval) {\n  var second=1000, minute=second*60, hour=minute*60, day=hour*24, week=day*7;\n  let date1 = date ? new Date(date*1000) : new Date();\n  let date2 = new Date();\n  var timediff = date2 - date1;\n  if (isNaN(timediff)) return NaN;\n  switch (interval) {\n  case 'years': return date2.getFullYear() - date1.getFullYear();\n  case 'months': return (\n    ((date2.getFullYear() * 12) + date2.getMonth())      -\n      ((date1.getFullYear() * 12) + date1.getMonth())\n  );\n  case 'weeks': return Math.floor(timediff / week)\n  case 'days': return Math.floor(timediff / day)\n  case 'hours': return Math.floor(timediff / hour)\n  case 'minutes': return Math.floor(timediff / minute)\n  case 'seconds': return Math.floor(timediff / second)\n  default: return undefined\n  }\n}\n\nexport function getDateCreated(daysSince) {\n  const d = new Date();\n  d.setDate(d.getDate() - daysSince);\n  return `${d.getMonth()+1}/${d.getDate()}/${d.getFullYear()}`\n}\n\nexport function getDateFromTimestamp(ts, pretty = false) {\n  const d = new Date(ts*1000);\n  if (pretty) return `${d.getDate()} ${d.toLocaleString('default', { month: 'short'})} ${d.getFullYear()}`\n  return `${d.getMonth()+1}/${d.getDate()}/${d.getFullYear()}`\n}\n\nexport const convertToHours = seconds => Number(seconds) / 60 / 60\n","/*global web3*/\nimport { uniqBy, length } from 'ramda'\n\nconst { utils } = web3\n\nexport const generateChatRoom = title => `#status-${title.replace(/\\s/g, '').replace(/\\W/g, '').toLowerCase()}`\n\nexport const formatProjectId = id => utils.toHex(id)\nconst getFile = filePath => filePath.split('/').slice(-1)[0]\nconst formatMedia = content => {\n  const blob = new Blob([content])\n  const src = URL.createObjectURL(blob)\n  return src\n}\n\n\nconst getName = asset => asset.path.split('/').slice(-1)[0]\nconst isManifest = asset => {\n  const name = getName(asset)\n  return name.toLowerCase() === 'manifest.json'\n}\nexport const getProjectManifest = assets => {\n  return assets ? JSON.parse(assets.find(isManifest).content) : null\n}\n\nexport function getNumberOfBackers(pledges){\n  return length(uniqBy(p => p.owner, pledges))\n}\n\nconst hasManifest = assets => !!assets.find(isManifest)\nexport const getMediaType = assets => {\n  if (!assets || !hasManifest(assets)) return false\n  const { media } = getProjectManifest(assets)\n  if (media.type.toLowerCase().includes('video')) return true\n}\n\nexport function setMediaType(url) {\n  if (url.match(/\\.(jpeg|jpg|gif|png)$/) !== null) return 'image'\n  return 'video'\n}\n\nexport const getMediaSrc = assets => {\n  if (!assets || !hasManifest(assets)) return null\n  const { media } = getProjectManifest(assets)\n  const validMedia = media.type.includes('video') || media.type.includes('image')\n  if (validMedia) {\n    if (media.url) return media.url\n    if (media.file && media.file !== '/root/') {\n      try {\n        return formatMedia(\n          assets.find(a => getName(a) === getFile(media.file)).content\n        )\n      } catch(err) {\n        console.log({err})\n      }\n    }\n  }\n}\n","import { useState, useEffect, useMemo, useContext } from 'react'\nimport { unnest } from 'ramda'\nimport { timeSinceBlock } from '../../utils/dates'\nimport { getFiles, getFilesWeb, ipfs, getFilesWebTheGraph } from '../../utils/ipfs'\nimport { getAllowanceFromAddress } from '../../utils/currencies'\nimport { arrayToObject } from '../../utils/array'\nimport { FundingContext } from '../../context'\nimport { getDelegateProfiles } from '../../actions/profiles'\nimport { getDelegatePledgesByProfile } from '../../actions/delegates'\n\nconst callOrderFns = [getFiles, getFilesWeb, getFilesWebTheGraph]\nasync function getProjectAge(data, setState){\n  if (data && data.profile) {\n    setState(timeSinceBlock(data.profile.creationTime, 'days'))\n  } else {\n    setState(timeSinceBlock(false, 'days'))\n  }\n}\n\nasync function getProjectCreator(data, setState){\n  if (!data || !data.profile) return\n  const { addr } = data.profile\n  setState(addr)\n}\n\nasync function tryIpfsGets(CID, setState, index=0){\n  const ipfsFn = callOrderFns[index]\n  ipfsFn(CID)\n    .then((files) => {\n      console.log('IPFS get sucessful on attempt: ', index+1)\n      setState(files)\n    })\n    .catch(async (err) => {\n      console.log('IPFS getFilesWeb error: ', err, 'Attempt: ', index + 1)\n      if (callOrderFns[index + 1]) tryIpfsGets(CID, setState, index + 1)\n    })\n}\n\nasync function getProjectAssets(data, setState, debug=false){\n  if (!data || !data.profile) return\n  const { profile: { url } } = data\n  const CID = url.split('/').slice(-1)[0]\n  if (debug) console.log({CID, data, ipfs})\n  tryIpfsGets(CID, setState)\n}\n\nasync function getPledge(dPledge) {\n  const pledge = await dPledge.pledge.fetch()\n  dPledge.pledgeData = pledge\n  return dPledge\n}\n\nasync function fetchAndAddDelegateProfiles(account, setState) {\n  const profiles = await getDelegateProfiles(account)\n  setState(profiles)\n}\n\nasync function fetchAndAddDelegatePledges(profiles, setState) {\n  const dPledges = []\n  if (!profiles || !profiles.length) {\n    return setState(dPledges)\n  }\n  profiles.forEach(profile => {\n    const delegatePledges = getDelegatePledgesByProfile(profile)\n    dPledges.push(delegatePledges)\n  })\n  const resolved = await Promise.all(dPledges)\n  const unnested = unnest(resolved)\n  const expanded = await Promise.all(unnested.map(getPledge))\n  setState(expanded)\n}\n\nexport function useProfileData(profiles) {\n  const [delegatePledges, setDelegatePledges] = useState(null)\n\n  useEffect(() => {\n    fetchAndAddDelegatePledges(profiles, setDelegatePledges)\n  }, [profiles])\n  return delegatePledges\n}\n\nconst isManifest = asset => {\n  const name = asset.path.split('/').slice(-1)[0]\n  return name.toLowerCase() === 'manifest.json'\n}\nconst getProjectManifest = (data, assets) => {\n  if (data && data.profile && data.profile.projectInfo) {\n    const { isPlaying, type, file } = data.profile.projectInfo\n    return {\n      ...data.profile.projectInfo,\n      media: {\n        isPlaying,\n        type,\n        file\n      }\n    }\n  }\n\n  if (!assets) {\n    return null;\n  }\n\n  const manifest = assets.find(isManifest);\n  if (!manifest) {\n    return null;\n  }\n  try {\n    return JSON.parse(manifest.content)\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function getAuthorization(data, setState, currencies) {\n  if (!data || !data.profile) return\n  const { profile: { projectInfo: { goalToken } } } = data\n  const allowance = await getAllowanceFromAddress(goalToken, currencies)\n  setState(allowance)\n}\n\nexport function useProjectData(projectId, data) {\n  const [projectAge, setAge] = useState(null)\n  const [creator, setCreator] = useState(null)\n  const [projectAssets, setAssets] = useState(null)\n  const [ipfsReady, setIpfsState] = useState(null)\n  const [delegateProfiles, setDelegateProfiles] = useState(null)\n  const [authorization, setAuthorization] = useState(0)\n  const { account, currencies, openSnackBar, syncWithRemote } = useContext(FundingContext)\n\n  useEffect(() => {\n    ipfs.on('ready', () => { setIpfsState(true) })\n  }, [projectId])\n\n  useEffect(() => {\n    fetchAndAddDelegateProfiles(account, setDelegateProfiles)\n  }, [account])\n\n  useEffect(() => {\n    getProjectAge(data, setAge)\n  }, [data, projectId])\n\n  useEffect(() => {\n    getProjectCreator(data, setCreator)\n  }, [data, projectId])\n\n  useEffect(() => {\n    getProjectAssets(data, setAssets)\n  }, [ipfsReady, data])\n\n  useEffect(() => {\n    if (account && currencies) getAuthorization(data, setAuthorization, currencies)\n  }, [account, data, currencies])\n\n  const manifest = useMemo(() => getProjectManifest(data, projectAssets), [data, projectAssets, projectId])\n\n  return {\n    account,\n    authorization,\n    creator,\n    projectAge,\n    projectAssets,\n    manifest,\n    delegateProfiles,\n    openSnackBar,\n    syncWithRemote\n  }\n}\n\nfunction mergePledgesAuthorizations(pledges, authorizations, setState) {\n  const auths = arrayToObject(authorizations, 'ref')\n  const enriched = pledges.map(pledge => {\n    const { idPledge } = pledge\n    if (auths[idPledge]) pledge.authorization = auths[idPledge]\n    return pledge\n  })\n  setState(enriched)\n}\nexport function usePledgesAuthorizations(pledges, authorizations, confirmedPayments) {\n  const [enrichedPledges, setEnrichedPledges] = useState(pledges)\n  const confirmedIds = confirmedPayments.map(p => p.returnValues.idPayment)\n  const filteredAuths = authorizations.filter(\n    a => !confirmedIds.includes(a.returnValues.idPayment)\n  )\n\n  useEffect(() => {\n    mergePledgesAuthorizations(pledges, filteredAuths, setEnrichedPledges)\n  }, [pledges, authorizations])\n\n  return enrichedPledges\n}\n","import { gql } from 'apollo-boost'\n\nexport const pledgeLifetimeReceived = gql`\nfragment PledgeLifetimeReceived on PledgesInfo {\n  lifetimeReceived\n}\n`\nexport const pledgesInfosFields = gql`\n${pledgeLifetimeReceived}\nfragment PledgesInfoFields on PledgesInfo {\n  id\n  ...PledgeLifetimeReceived\n  token\n}\n`\n\nexport const pledgeFields = gql`\nfragment PledgeFields on Pledge {\n      id,\n      amount,\n      token,\n      commitTime,\n      pledgeState,\n      intendedProject,\n      nDelegates,\n      creationTime\n}\n`\n\nexport const getProfileById = gql`\n${pledgesInfosFields}\n\nquery Profile($id: ID!) {\n  profile(id: $id) {\n    id\n    addr\n    commitTime\n    url\n    profileId\n    type\n    name\n    creationTime\n    pledgesInfos {\n      ...PledgesInfoFields\n    }\n    projectInfo {\n      id\n      title\n      subtitle\n      creator\n      repo\n      avatar\n      goal\n      goalToken\n      description\n      chatRoom\n      file\n      type\n      isPlaying\n    }\n  }\n}\n`\n\nexport const getProfileWithPledges = gql`\n${pledgesInfosFields}\n${pledgeFields}\n\nquery Profile($id: ID!) {\n  profile(id: $id) {\n    id\n    addr\n    commitTime\n    url\n    profileId\n    type\n    name\n    creationTime\n    pledgesInfos {\n      ...PledgesInfoFields\n    }\n    pledges(where: {amount_gt: 0}) {\n      ...PledgeFields\n    }\n    projectInfo {\n      id\n      title\n      subtitle\n      creator\n      repo\n      avatar\n      goal\n      goalToken\n      description\n      chatRoom\n      file\n      type\n      isPlaying\n    }\n  }\n}\n`\n\nexport const getProjects = gql`\n${pledgesInfosFields}\n\nquery Projects($type: String! = \"PROJECT\", $limit: Int, $offset: Int, $orderDirection: String){\n  profiles(where: {type: $type, projectInfo_not: null}, first: $limit, skip: $offset, orderBy: profileId, orderDirection: $orderDirection) {\n    id\n    addr\n    canceled\n    commitTime\n    type\n    url\n    profileId\n    creationTime\n    projectInfo {\n      id\n      title\n      subtitle\n      creator\n      goalToken\n      goal\n    }\n    pledgesInfos{\n     ...PledgesInfoFields\n    }\n  }\n}\n`\n","/*global web3*/\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Formik } from 'formik'\nimport LiquidPledging from '../../embarkArtifacts/contracts/LiquidPledging'\nimport LPVault from '../../embarkArtifacts/contracts/LPVault'\nimport { withStyles } from '@material-ui/core/styles'\nimport { useProjectData, useProfileData } from './hooks'\nimport { Button, Divider, Typography, Card, CardActions, CardContent, FormControlLabel, Switch } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { getTokenLabel, getHumanAmountFormatter } from '../../utils/currencies'\nimport { toDecimal } from '../../utils/conversions'\nimport { formatProjectId } from '../../utils/project'\nimport { getProfileWithPledges } from './queries'\nimport { useQuery } from '@apollo/react-hooks'\nimport Loading from '../base/Loading'\n\nconst { mWithdraw, withdraw } = LiquidPledging.methods\nconst { confirmPayment } = LPVault.methods\nconst { utils } = web3\n\nconst encodePledges = pledges => pledges.map(p => {\n  // .substring is to remove the 0x prefix on the toHex result\n  return (\n    '0x' +\n    utils.padLeft(utils.toHex(p.amount).substring(2), 48) +\n    utils.padLeft(utils.toHex(p.id).substring(2), 16)\n  );\n});\n\nconst PLEDGED = 'Pledged'\nconst PAYING = 'Paying'\nconst PAID = 'Paid'\nconst pledgeTypes = {\n  0: PLEDGED,\n  1: PAYING,\n  2: PAID\n}\nconst buttonText = {\n  0: 'Submit for withdraw',\n  1: 'Confirm withdraw',\n  2: 'Already paid'\n}\n\nconst getCommitTime = (pledge, profileCommitTime) => {\n  const { commitTime } = pledge\n  if (Number(commitTime) === 0) return 0\n  const time = Number(commitTime) + Number(profileCommitTime)\n  const date = new Date(time * 1000)\n  return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n}\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n  },\n  root: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(12, [col] 1fr)',\n    gridTemplateRows: 'repeat(5, [row] auto)',\n    gridColumnGap: '1em',\n    gridRowGap: '36px',\n    fontFamily: theme.typography.fontFamily,\n    [theme.breakpoints.up('sm')]: {\n      margin: '1.75rem 4.5rem'\n    }\n  },\n  title: {\n    display: 'grid',\n    fontSize: '2.5rem',\n    gridColumnStart: '1',\n    gridColumnEnd: '13',\n    gridRowStart: '1',\n    gridRowEnd: '6',\n    textAlign: 'center'\n  },\n  subText: {\n    textAlign: 'center',\n    marginBottom: '0.5em'\n  },\n  switchSelect: {\n    display: 'grid',\n    gridColumnStart: '3',\n    gridColumnEnd: '9'\n  },\n  submissionRoot: {\n    display: 'grid',\n    gridRowGap: '36px',\n    gridColumnStart: '1',\n    gridColumnEnd: '13'\n  },\n  textField: {\n    width: '100%'\n  }\n})\n\nfunction SimplePledge({ classes, pledge, values, handleChange, pledgeType, profileCommitTime }) {\n  const pledgeId = `pledge.${pledge.id}`\n  const commitTime = getCommitTime(pledge, profileCommitTime)\n  const keys = Object.keys(values)\n  const value = keys.find(k => values[k].id === pledgeId)\n\n  const notPaid = pledgeTypes[pledgeType] !== PAID\n  const notPaying = pledgeTypes[pledgeType] !== PAYING\n  const amtFormatter = getHumanAmountFormatter(pledge.token)\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} color=\"primary\" gutterBottom>\n          {amtFormatter(pledge.amount)} {getTokenLabel(pledge.token)}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\" className={classes.subText}>\n          Pledge ID: {toDecimal(pledge.id)}\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" className={classes.subText}>\n          Pledge Status: {pledgeTypes[pledge.pledgeState]}\n        </Typography>\n        {notPaid && <Typography variant=\"h6\" component=\"h3\" className={classes.subText}>\n          Commit Time: {commitTime}\n        </Typography>}\n      </CardContent>\n      {notPaid && <CardActions style={{ justifyContent: 'center' }}>\n        <FormControlLabel\n          control={\n            <Switch\n              name={`pledge.${pledge.id}`}\n              checked={value}\n              onChange={handleChange}\n              value=\"checkedA\"\n            />\n          }\n          label={notPaying ? 'Withdraw' : 'Confirm'}\n        />\n      </CardActions>}\n    </Card>\n  );\n}\n\nSimplePledge.propTypes = {\n  classes: PropTypes.object.isRequired,\n  pledge: PropTypes.object.isRequired,\n  values: PropTypes.object.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  pledgeType: PropTypes.number.isRequired\n};\nconst PledgeInfo = withStyles(styles)(SimplePledge);\n\nconst Title = ({ className, manifest }) => (\n  <div className={className}>\n    <div style={{ alignSelf: 'center' }}>{manifest && manifest.title}</div>\n    <div style={{ alignSelf: 'center', fontSize: '1.2rem', fontWeight: 200 }}>{manifest && `By ${manifest.creator}`}</div>\n    <Divider />\n  </div>\n)\n\nconst getSendFn = (pledgeType, filteredPledges) => {\n  if (pledgeTypes[pledgeType] === PLEDGED) {\n    return filteredPledges.length > 1 ? mWithdraw : withdraw\n  }\n  return confirmPayment\n\n}\nconst getArgs = (pledgeType, filteredPledges) => {\n  if (pledgeTypes[pledgeType] === PLEDGED) {\n    const formattedPledges = filteredPledges.map(pledge => ({ amount: pledge.amount, id: pledge.id }))\n    if (filteredPledges.length > 1) return [encodePledges(formattedPledges)]\n    const withdrawArgs = [formattedPledges[0].id, formattedPledges[0].amount]\n    return withdrawArgs\n  }\n  const { idPayment } = filteredPledges.filter(p => !!p)[0].authorization.returnValues\n  return [idPayment]\n}\nconst SubmissionSection = ({ classes, openSnackBar, syncWithRemote, pledges, pledgeType, profileCommitTime }) => {\n  return (\n    <Formik\n      onSubmit={async(values) => {\n        const { pledge } = values\n        const filteredPledges = Object.keys(pledge)\n          .filter(p => !!pledge[p])\n          .map(pledge => pledges.find(p => p.id === pledge))\n        const sendFn = getSendFn(pledgeType, filteredPledges)\n        const args = getArgs(pledgeType, filteredPledges)\n        const toSend = sendFn(...args)\n        const estimatedGas = await toSend.estimateGas()\n        console.log({estimatedGas})\n        toSend.send({gas: estimatedGas})\n          .then(async res => {\n            console.log({res})\n            openSnackBar('success', 'Withdraws initiated')\n          })\n          .catch(e => {\n            openSnackBar('error', 'An error has occured with the transaction')\n            console.log({e})\n          })\n          .finally(() => {\n            syncWithRemote()\n          })\n      }}\n    >\n      {({\n        values,\n        errors: _errors,\n        touched: _touched,\n        handleChange,\n        handleSubmit,\n        setFieldValue: _setFieldValue,\n        setStatus: _setStatus,\n        status: _status\n      }) => {\n        return (\n          <form onSubmit={handleSubmit} className={classes.submissionRoot}>\n            {pledges.map(pledge => <PledgeInfo key={pledge.id} pledge={pledge} values={values} handleChange={handleChange} pledgeType={pledgeType}  profileCommitTime={profileCommitTime} />)}\n            {pledgeTypes[pledgeType] !== PAID && <Button type=\"submit\" color=\"primary\" variant=\"contained\" style={{height: '50px', width: '100%'}}>{buttonText[pledgeType]}</Button>}\n          </form>\n        )\n      }\n      }\n    </Formik>\n  )\n}\n\nconst useStyles = makeStyles({\n  root: {\n    gridColumnEnd: '13',\n    gridColumnStart: '1',\n  },\n})\n\nfunction CenteredTabs({ pledged, paying, paid, pledgeType, setPledgeType }) {\n  const classes = useStyles();\n\n  function handleChange(event, newValue) {\n    setPledgeType(newValue);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Tabs\n        value={pledgeType}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        centered\n      >\n        <Tab label={`Pledged (${pledged})`} />\n        <Tab label={`Paying (${paying})`} />\n        <Tab label={`Paid (${paid})`} />\n      </Tabs>\n    </Paper>\n  );\n}\n\nfunction ProjectPledges({classes, match}) {\n  const [pledgeType, setPledgeType] = useState(0)\n  const projectId = match.params.id\n  const { loading, error, data } = useQuery(getProfileWithPledges, {\n    variables: { id: formatProjectId(projectId) }\n  });\n\n  const {  manifest, delegateProfiles, openSnackBar, syncWithRemote } = useProjectData(projectId, data)\n  const delegatePledges = useProfileData(delegateProfiles)\n  if (loading) return <Loading />\n  if (error) return <div>{`Error! ${error.message}`}</div>\n  const { pledges } = data.profile\n  const pledged = pledges.filter(p => p.pledgeState === 0)\n  const paying = pledges.filter(p => p.pledgeState === 1)\n  const paid = pledges.filter(p => p.pledgeState === 2)\n  const selectedPledges = {\n    0: pledged,\n    1: paying,\n    2: paid\n  }\n  return (\n    <div className={classes.root}>\n      <Title className={classes.title} manifest={manifest} />\n      <CenteredTabs\n        pledged={pledged.length}\n        paying={paying.length}\n        paid={paid.length}\n        pledgeType={pledgeType}\n        setPledgeType={setPledgeType}\n      />\n      <SubmissionSection\n        classes={classes}\n        profiles={delegateProfiles}\n        delegatePledges={delegatePledges}\n        projectId={projectId}\n        openSnackBar={openSnackBar}\n        syncWithRemote={syncWithRemote}\n        pledges={selectedPledges[pledgeType]}\n        pledgeType={pledgeType}\n        profileCommitTime={data.profile.commitTime}\n      />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(ProjectPledges)\n"],"sourceRoot":""}