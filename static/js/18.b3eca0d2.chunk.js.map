{"version":3,"sources":["utils/ipfs.js","utils/images.js","utils/dates.js","utils/project.js","components/projects/hooks.js","components/projects/Project.jsx"],"names":["ipfsMatcher","Matcher","begin","find","ipfs","IPFS","ipfsHttp","ipfsClient","host","port","protocol","ipfsHttpTheGraph","api-path","window","jsIPFS","on","console","log","bootstrap","add","isIpfs","str","test","captureFile","event","cb","imgCb","stopPropagation","preventDefault","files","target","formattedFiles","formatFileList","saveToIpfs","formattedList","i","length","push","formatForIpfs","file","name","content","type","path","concat","formatForIpfsGateway","ipfsId","progress","prog","then","response","hash","getImageFromIpfs","catch","err","error","uploadFilesToIpfs","_ref","Object","_Users_Barry_projects_status_im_liquid_funding_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","manifest","gateway","fileLists","formatFn","uploadFn","res","_args","arguments","wrap","_context","prev","next","undefined","uploadToIpfsGateway","uploadToIpfs","keys","forEach","k","_Users_Barry_projects_status_im_liquid_funding_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","Buffer","from","sent","abrupt","stop","_x","_x2","apply","this","_ref2","_callee2","_context2","slice","_x3","_ref3","_callee3","_context3","_x4","pinToGateway","_ref5","_callee5","cid","_context5","split","pin","recursive","_x6","_ref6","_callee6","_context6","getFromIpfs","_x7","_x8","_ref7","_callee7","arrayBufferView","blob","img","_context7","getFiles","Uint8Array","Blob","getImageType","URL","createObjectURL","_Users_Barry_projects_status_im_liquid_funding_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_x9","CID","clean","Promise","resolve","reject","get","getFilesWeb","getFilesWebTheGraph","isWeb","includes","formatMedia","__webpack_require__","d","__webpack_exports__","isVideo","typeMap","gif","jpg","png","pdf","suffix","toLowerCase","timeSinceBlock","date","interval","date1","Date","date2","timediff","isNaN","NaN","getFullYear","getMonth","Math","floor","day","hour","minute","second","getDateCreated","daysSince","setDate","getDate","getDateFromTimestamp","ts","pretty","toLocaleString","month","generateChatRoom","formatProjectId","getProjectManifest","getMediaType","setMediaType","getMediaSrc","utils","web3","title","replace","id","toHex","getName","asset","isManifest","assets","JSON","parse","hasManifest","media","url","match","callOrderFns","data","setState","regenerator_default","profile","creationTime","addr","tryIpfsGets","_callee4","index","_args4","_context4","ipfsFn","asyncToGenerator","_x17","debug","_args5","getPledge","dPledge","pledge","fetch","pledgeData","account","profiles","getDelegateProfiles","_callee8","dPledges","resolved","unnested","expanded","_context8","delegatePledges","getDelegatePledgesByProfile","all","unnest","map","useProfileData","_useState","useState","_useState2","slicedToArray","setDelegatePledges","useEffect","fetchAndAddDelegatePledges","projectInfo","_data$profile$project","isPlaying","objectSpread","e","_callee9","currencies","goalToken","allowance","_context9","getAllowanceFromAddress","useProjectData","projectId","_useState3","_useState4","projectAge","setAge","_useState5","_useState6","creator","setCreator","_useState7","_useState8","projectAssets","setAssets","_useState9","_useState10","ipfsReady","setIpfsState","_useState11","_useState12","delegateProfiles","setDelegateProfiles","_useState13","_useState14","authorization","setAuthorization","_useContext","useContext","FundingContext","openSnackBar","syncWithRemote","fetchAndAddDelegateProfiles","getProjectAge","getProjectCreator","getProjectAssets","getAuthorization","useMemo","DEFAULT_AVATAR","getFile","filePath","getAvatarSrc","avatar","formatAvatar","StyledProject","withStyles","theme","root","display","gridTemplateColumns","gridTemplateRows","gridColumnGap","gridRowGap","margin","fontFamily","typography","paper","padding","spacing","unit","textAlign","color","palette","text","secondary","fontSize","subTitle","fontWeight","flexDirection","justifyContent","alignItems","creatorName","objectFit","fullWidth","gridColumnStart","gridColumnEnd","secondRow","infoBox","infoBoxSection","infoText","raisedAmount","primary","main","subtext","_Users_Barry_projects_status_im_liquid_funding_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","caption","linearColorPrimary","backgroundColor","linearBarColorPrimary","link","textDecoration","classes","transfers","pledges","projectAddedEvents","params","urlName","_useProjectData","amountsPledged","getAmountsPledged","numberOfBackers","uniqBy","p","owner","getNumberOfBackers","mediaType","mediaUrl","avatarUrl","totalPledged","percentToGoal","min","Number","goal","profileType","userIsOwner","toUpperCase","mediaSrc","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","react__WEBPACK_IMPORTED_MODULE_3__","_base_Loading__WEBPACK_IMPORTED_MODULE_13__","className","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_14__","src","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6__","component","gutterBottom","subtitle","react_player__WEBPACK_IMPORTED_MODULE_15___default","width","height","playing","controls","_material_ui_core_CardMedia__WEBPACK_IMPORTED_MODULE_11__","alt","_material_ui_core_LinearProgress__WEBPACK_IMPORTED_MODULE_12__","colorPrimary","barColorPrimary","variant","value","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","to","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7__","style","react_markdown__WEBPACK_IMPORTED_MODULE_5___default","source","description","withDatabase","withObservables","database","collections","query","Q","where","observe"],"mappings":"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","file":"static/js/18.b3eca0d2.chunk.js","sourcesContent":["import IPFS from 'ipfs'\nimport ipfsClient from 'ipfs-http-client'\nimport { Buffer } from 'buffer'\nimport { Matcher } from '@areknawo/rex'\nimport { getImageType } from './images'\n\nconst ipfsMatcher = new Matcher().begin().find('ipfs/')\nexport const ipfs = new IPFS()\nconst ipfsHttp = ipfsClient({ host: 'test-ipfs.status.im', port: '2053', protocol: 'https' })\nconst ipfsHttpTheGraph = ipfsClient({ host: 'api.thegraph.com', 'api-path': '/ipfs/api/v0/', protocol: 'https', port: '443' })\n\nwindow.ipfsHttp = ipfsHttp\nwindow.ipfsHttpTheGraph = ipfsHttpTheGraph\nwindow.jsIPFS = ipfs\n\nipfs.on('ready', () => {\n  console.log('Node is ready to use!')\n  // Add status ipfs node as peer\n  ipfs.bootstrap.add('/ip4/35.188.209.83/tcp/4001/ipfs/QmZqW6QHdDVyHMvYktpA1PAuKgvqhwumbuFqFB5URedSbA')\n})\n\n\nexport const isIpfs = str => ipfsMatcher.test(str)\nexport const captureFile = (event, cb, imgCb) => {\n  event.stopPropagation()\n  event.preventDefault()\n  const files = event.target.files\n  const formattedFiles = formatFileList(files)\n  console.log({files, formattedFiles})\n  saveToIpfs(formattedFiles, cb, imgCb)\n}\n\nexport const formatFileList = files => {\n  const formattedList = []\n  for (let i=0; i<files.length; i++) {\n    formattedList.push(formatForIpfs(files[i]))\n  }\n  return formattedList\n}\n\nexport const formatForIpfs = file => {\n  const { name, type: _type } = file\n  const content = file\n  return {\n    path:  `/root/${name}`,\n    content\n  }\n}\n\nexport const formatForIpfsGateway = file => {\n  const { name, type: _type } = file\n  const content = file\n  return {\n    path:  `/root/${name}`,\n    content\n  }\n}\n\nexport const saveToIpfs = (files, cb, imgCb) => {\n  let ipfsId\n  ipfs.add(files, { progress: (prog) => console.log(`received: ${prog}`) })\n    .then((response) => {\n      console.log(response)\n      ipfsId = response[0].hash\n      cb(`ipfs/${ipfsId}`)\n      getImageFromIpfs(ipfsId, imgCb)\n    }).catch((err) => {\n      console.error(err)\n    })\n}\n\nexport const uploadFilesToIpfs = async (files, manifest, gateway = false) => {\n  let fileLists = []\n  const formatFn = gateway ? formatForIpfsGateway : formatForIpfs\n  const uploadFn = gateway ? uploadToIpfsGateway : uploadToIpfs\n  Object.keys(files).forEach(k => {\n    fileLists = [...fileLists, formatFn(files[k][0])]\n  })\n  fileLists.push({\n    path: '/root/manifest.json', content: Buffer.from(manifest)\n  })\n  const res = await uploadFn(fileLists)\n  return res\n}\n\nexport const uploadToIpfs = async files => {\n  const res = await ipfs.add(\n    files,\n    {\n      progress: (prog) => console.log(`received: ${prog}`)\n    }\n  )\n  return `ipfs/${res.slice(-1)[0].hash}`\n}\n\nexport const uploadToIpfsGateway = async files => {\n  const res = await ipfsHttpTheGraph.add(files)\n  return `ipfs/${res.slice(-1)[0].hash}`\n}\n\nexport const pinToIpfs = async hash => {\n  const cid = hash.split('/').slice(-1)[0]\n  const res = await ipfs.pin.add(cid, { recursive: false })\n  console.log({res})\n}\n\nexport const pinToGateway = async hash => {\n  const cid = hash.split('/').slice(-1)[0]\n  const res = await ipfsHttp.pin.add(cid, { recursive: true })\n  console.log({res})\n}\n\nexport const getImageFromIpfs = async (hash, cb) => {\n  const res = await getFromIpfs(hash)\n  cb(res)\n}\n\nexport const getFromIpfs = async hash => {\n  const files = await getFiles(hash)\n  const file = files.slice(-1)[0]\n  const { content } = file\n  const arrayBufferView = new Uint8Array(content)\n  const blob = new Blob([arrayBufferView], { type: getImageType(file) })\n  const img = URL.createObjectURL(blob)\n  return { ...file, img }\n}\n\nexport const getFiles = CID => {\n  const clean = CID.split('/').slice(-1)[0]\n  return new Promise(function(resolve, reject) {\n    ipfs.get(clean, (err, files) => {\n      if (err) reject(err)\n      else resolve(files)\n    })\n  })\n}\n\nexport const getFilesWeb = CID => {\n  const clean = CID.split('/').slice(-1)[0]\n  return new Promise(function(resolve, reject) {\n    ipfsHttp.get(clean, (err, files) => {\n      if (err) reject(err)\n      else resolve(files)\n    })\n  })\n}\n\nexport const getFilesWebTheGraph = CID => {\n  const clean = CID.split('/').slice(-1)[0]\n  return new Promise(function(resolve, reject) {\n    ipfsHttpTheGraph.get(clean, (err, files) => {\n      if (err) reject(err)\n      else resolve(files)\n    })\n  })\n}\n\nexport const isWeb = str => str.includes('http')\nexport const formatMedia = str => {\n  return isWeb(str) ? str : `/root/${str}`\n}\n","const typeMap = {\n  'gif': 'image/gif',\n  'jpg': 'image/jpeg',\n  'png': 'image/png',\n  'pdf': 'application/pdf'\n}\n\nexport const getImageType = file => {\n  const suffix = file.split('.').slice(-1)[0].toLowerCase()\n  return typeMap[suffix] ? typeMap[suffix] : 'image/jpeg'\n}\n\nexport const isVideo = file => file.type.includes('video')\n","export function timeSinceBlock(date=false, interval) {\n  var second=1000, minute=second*60, hour=minute*60, day=hour*24, week=day*7;\n  let date1 = date ? new Date(date*1000) : new Date();\n  let date2 = new Date();\n  var timediff = date2 - date1;\n  if (isNaN(timediff)) return NaN;\n  switch (interval) {\n  case 'years': return date2.getFullYear() - date1.getFullYear();\n  case 'months': return (\n    ((date2.getFullYear() * 12) + date2.getMonth())      -\n      ((date1.getFullYear() * 12) + date1.getMonth())\n  );\n  case 'weeks': return Math.floor(timediff / week)\n  case 'days': return Math.floor(timediff / day)\n  case 'hours': return Math.floor(timediff / hour)\n  case 'minutes': return Math.floor(timediff / minute)\n  case 'seconds': return Math.floor(timediff / second)\n  default: return undefined\n  }\n}\n\nexport function getDateCreated(daysSince) {\n  const d = new Date();\n  d.setDate(d.getDate() - daysSince);\n  return `${d.getMonth()+1}/${d.getDate()}/${d.getFullYear()}`\n}\n\nexport function getDateFromTimestamp(ts, pretty = false) {\n  const d = new Date(ts*1000);\n  if (pretty) return `${d.getDate()} ${d.toLocaleString('default', { month: 'short'})} ${d.getFullYear()}`\n  return `${d.getMonth()+1}/${d.getDate()}/${d.getFullYear()}`\n}\n\nexport const convertToHours = seconds => Number(seconds) / 60 / 60\n","/*global web3*/\nimport { uniqBy, length } from 'ramda'\n\nconst { utils } = web3\n\nexport const generateChatRoom = title => `#status-${title.replace(/\\s/g, '').replace(/\\W/g, '').toLowerCase()}`\n\nexport const formatProjectId = id => utils.toHex(id)\nconst getFile = filePath => filePath.split('/').slice(-1)[0]\nconst formatMedia = content => {\n  const blob = new Blob([content])\n  const src = URL.createObjectURL(blob)\n  return src\n}\n\n\nconst getName = asset => asset.path.split('/').slice(-1)[0]\nconst isManifest = asset => {\n  const name = getName(asset)\n  return name.toLowerCase() === 'manifest.json'\n}\nexport const getProjectManifest = assets => {\n  return assets ? JSON.parse(assets.find(isManifest).content) : null\n}\n\nexport function getNumberOfBackers(pledges){\n  return length(uniqBy(p => p.owner, pledges))\n}\n\nconst hasManifest = assets => !!assets.find(isManifest)\nexport const getMediaType = assets => {\n  if (!assets || !hasManifest(assets)) return false\n  const { media } = getProjectManifest(assets)\n  if (media.type.toLowerCase().includes('video')) return true\n}\n\nexport function setMediaType(url) {\n  if (url.match(/\\.(jpeg|jpg|gif|png)$/) !== null) return 'image'\n  return 'video'\n}\n\nexport const getMediaSrc = assets => {\n  if (!assets || !hasManifest(assets)) return null\n  const { media } = getProjectManifest(assets)\n  const validMedia = media.type.includes('video') || media.type.includes('image')\n  if (validMedia) {\n    if (media.url) return media.url\n    if (media.file && media.file !== '/root/') {\n      try {\n        return formatMedia(\n          assets.find(a => getName(a) === getFile(media.file)).content\n        )\n      } catch(err) {\n        console.log({err})\n      }\n    }\n  }\n}\n","import { useState, useEffect, useMemo, useContext } from 'react'\nimport { unnest } from 'ramda'\nimport { timeSinceBlock } from '../../utils/dates'\nimport { getFiles, getFilesWeb, ipfs, getFilesWebTheGraph } from '../../utils/ipfs'\nimport { getAllowanceFromAddress } from '../../utils/currencies'\nimport { arrayToObject } from '../../utils/array'\nimport { FundingContext } from '../../context'\nimport { getDelegateProfiles } from '../../actions/profiles'\nimport { getDelegatePledgesByProfile } from '../../actions/delegates'\n\nconst callOrderFns = [getFiles, getFilesWeb, getFilesWebTheGraph]\nasync function getProjectAge(data, setState){\n  if (data && data.profile) {\n    setState(timeSinceBlock(data.profile.creationTime, 'days'))\n  } else {\n    setState(timeSinceBlock(false, 'days'))\n  }\n}\n\nasync function getProjectCreator(data, setState){\n  if (!data || !data.profile) return\n  const { addr } = data.profile\n  setState(addr)\n}\n\nasync function tryIpfsGets(CID, setState, index=0){\n  const ipfsFn = callOrderFns[index]\n  ipfsFn(CID)\n    .then((files) => {\n      console.log('IPFS get sucessful on attempt: ', index+1)\n      setState(files)\n    })\n    .catch(async (err) => {\n      console.log('IPFS getFilesWeb error: ', err, 'Attempt: ', index + 1)\n      if (callOrderFns[index + 1]) tryIpfsGets(CID, setState, index + 1)\n    })\n}\n\nasync function getProjectAssets(data, setState, debug=false){\n  if (!data || !data.profile) return\n  const { profile: { url } } = data\n  const CID = url.split('/').slice(-1)[0]\n  if (debug) console.log({CID, data, ipfs})\n  tryIpfsGets(CID, setState)\n}\n\nasync function getPledge(dPledge) {\n  const pledge = await dPledge.pledge.fetch()\n  dPledge.pledgeData = pledge\n  return dPledge\n}\n\nasync function fetchAndAddDelegateProfiles(account, setState) {\n  const profiles = await getDelegateProfiles(account)\n  setState(profiles)\n}\n\nasync function fetchAndAddDelegatePledges(profiles, setState) {\n  const dPledges = []\n  if (!profiles || !profiles.length) {\n    return setState(dPledges)\n  }\n  profiles.forEach(profile => {\n    const delegatePledges = getDelegatePledgesByProfile(profile)\n    dPledges.push(delegatePledges)\n  })\n  const resolved = await Promise.all(dPledges)\n  const unnested = unnest(resolved)\n  const expanded = await Promise.all(unnested.map(getPledge))\n  setState(expanded)\n}\n\nexport function useProfileData(profiles) {\n  const [delegatePledges, setDelegatePledges] = useState(null)\n\n  useEffect(() => {\n    fetchAndAddDelegatePledges(profiles, setDelegatePledges)\n  }, [profiles])\n  return delegatePledges\n}\n\nconst isManifest = asset => {\n  const name = asset.path.split('/').slice(-1)[0]\n  return name.toLowerCase() === 'manifest.json'\n}\nconst getProjectManifest = (data, assets) => {\n  if (data && data.profile && data.profile.projectInfo) {\n    const { isPlaying, type, file } = data.profile.projectInfo\n    return {\n      ...data.profile.projectInfo,\n      media: {\n        isPlaying,\n        type,\n        file\n      }\n    }\n  }\n\n  if (!assets) {\n    return null;\n  }\n\n  const manifest = assets.find(isManifest);\n  if (!manifest) {\n    return null;\n  }\n  try {\n    return JSON.parse(manifest.content)\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function getAuthorization(data, setState, currencies) {\n  if (!data || !data.profile) return\n  const { profile: { projectInfo: { goalToken } } } = data\n  const allowance = await getAllowanceFromAddress(goalToken, currencies)\n  setState(allowance)\n}\n\nexport function useProjectData(projectId, data) {\n  const [projectAge, setAge] = useState(null)\n  const [creator, setCreator] = useState(null)\n  const [projectAssets, setAssets] = useState(null)\n  const [ipfsReady, setIpfsState] = useState(null)\n  const [delegateProfiles, setDelegateProfiles] = useState(null)\n  const [authorization, setAuthorization] = useState(0)\n  const { account, currencies, openSnackBar, syncWithRemote } = useContext(FundingContext)\n\n  useEffect(() => {\n    ipfs.on('ready', () => { setIpfsState(true) })\n  }, [projectId])\n\n  useEffect(() => {\n    fetchAndAddDelegateProfiles(account, setDelegateProfiles)\n  }, [account])\n\n  useEffect(() => {\n    getProjectAge(data, setAge)\n  }, [data, projectId])\n\n  useEffect(() => {\n    getProjectCreator(data, setCreator)\n  }, [data, projectId])\n\n  useEffect(() => {\n    getProjectAssets(data, setAssets)\n  }, [ipfsReady, data])\n\n  useEffect(() => {\n    if (account && currencies) getAuthorization(data, setAuthorization, currencies)\n  }, [account, data, currencies])\n\n  const manifest = useMemo(() => getProjectManifest(data, projectAssets), [data, projectAssets, projectId])\n\n  return {\n    account,\n    authorization,\n    creator,\n    projectAge,\n    projectAssets,\n    manifest,\n    delegateProfiles,\n    openSnackBar,\n    syncWithRemote\n  }\n}\n\nfunction mergePledgesAuthorizations(pledges, authorizations, setState) {\n  const auths = arrayToObject(authorizations, 'ref')\n  const enriched = pledges.map(pledge => {\n    const { idPledge } = pledge\n    if (auths[idPledge]) pledge.authorization = auths[idPledge]\n    return pledge\n  })\n  setState(enriched)\n}\nexport function usePledgesAuthorizations(pledges, authorizations, confirmedPayments) {\n  const [enrichedPledges, setEnrichedPledges] = useState(pledges)\n  const confirmedIds = confirmedPayments.map(p => p.returnValues.idPayment)\n  const filteredAuths = authorizations.filter(\n    a => !confirmedIds.includes(a.returnValues.idPayment)\n  )\n\n  useEffect(() => {\n    mergePledgesAuthorizations(pledges, filteredAuths, setEnrichedPledges)\n  }, [pledges, authorizations])\n\n  return enrichedPledges\n}\n","/*eslint complexity: [\"error\", 25]*/\n/*global web3*/\nimport React, { useMemo, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport withObservables from '@nozbe/with-observables'\nimport { Q } from '@nozbe/watermelondb'\nimport { withDatabase } from '@nozbe/watermelondb/DatabaseProvider'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Loading from '../base/Loading'\nimport Avatar from '@material-ui/core/Avatar'\nimport ReactPlayer from 'react-player'\nimport { uniqBy, length } from 'ramda'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport { toEther } from '../../utils/conversions'\nimport { timeSinceBlock } from '../../utils/dates'\nimport { getAmountsPledged } from '../../utils/pledges'\nimport { getFiles } from '../../utils/ipfs'\nimport { getImageType } from '../../utils/images'\nimport { getProjectManifest } from '../../utils/project'\nimport { useProjectData } from './hooks'\n\nconst ROOT_PATH = '/root/'\nconst DEFAULT_AVATAR = 'https://our.status.im/content/images/2018/07/status_logo_blue_1--2-.png'\n\nconst styles = theme => ({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 5fr',\n    gridTemplateRows: '1fr 4fr',\n    gridColumnGap: '1em',\n    gridRowGap: '36px',\n    margin: '1.75rem 4.5rem',\n    fontFamily: theme.typography.fontFamily\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    fontSize: '2.5rem'\n  },\n  subTitle: {\n    fontSize: '1.5rem',\n    fontWeight: 200\n  },\n  creator:{\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'end'\n  },\n  creatorName: {\n    fontSize: '1rem'\n  },\n  media: {\n    objectFit: 'cover'\n  },\n  fullWidth: {\n    gridColumnStart: '1',\n    gridColumnEnd: '3',\n  },\n  secondRow: {\n    gridColumnStart: '1',\n    gridColumnEnd: '3',\n    display: 'grid',\n    gridTemplateColumns: '2fr 1fr',\n    gridColumnGap: '3em'\n  },\n  infoBox: {\n    display: 'grid',\n    gridTemplateRows: '0rem 2.5rem 2.5rem 2.5rem',\n    gridRowGap: '2rem'\n  },\n  infoBoxSection: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  infoText: {\n    fontSize: '2rem'\n  },\n  raisedAmount: {\n    fontSize: '2em',\n    color: theme.palette.primary.main\n  },\n  subtext: {\n    ...theme.typography.caption,\n    fontSize: '1rem'\n  },\n  linearColorPrimary: {\n    backgroundColor: '#00000014',\n  },\n  linearBarColorPrimary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  link: {\n    textDecoration: 'none'\n  }\n})\n\nfunction _getReceivedAmount(id, transfers){\n  return transfers\n    .filter(t => t.returnValues.to === id)\n    .reduce((pv, cv) => {\n      const amount = Number(toEther(cv.returnValues.amount))\n      return pv + amount\n    }, 0)\n}\n\nfunction _getWithdrawnAmount(id, transfers){\n  return transfers\n    .filter(t => t.returnValues.from === id)\n    .reduce((pv, cv) => {\n      const amount = Number(toEther(cv.returnValues.amount))\n      return pv + amount\n    }, 0)\n}\n\nfunction getNumberOfBackers(pledges){\n  return length(uniqBy(p => p.owner, pledges))\n}\n\nasync function _getProjectAge(id, events, setState){\n  const event = events.find(e => e.returnValues.idProject === id)\n  const { timestamp } = await web3.eth.getBlock(event.blockNumber)\n  setState(timeSinceBlock(timestamp, 'days'))\n}\n\nasync function _getProjectAssets(hash, setState){\n  console.log({hash})\n  const CID = hash.split('/').slice(-1)[0]\n  getFiles(CID)\n    .then((files) => {\n      setState(files)\n      const manifest = files[2]\n      console.log({files}, JSON.parse(manifest.content))\n    })\n    .catch(console.log)\n}\n\nconst formatMedia = content => {\n  const type = 'video/mp4'\n  const blob = new Blob([content], {type})\n  const src = URL.createObjectURL(blob)\n  return src\n}\n\nconst formatAvatar = (content, type) => {\n  const blob = new Blob([content], {type})\n  const src = URL.createObjectURL(blob)\n  return src\n}\n\nconst getMediaType = assets => {\n  if (!assets) return false\n  const { media } = getProjectManifest(assets)\n  if (media.type.toLowerCase().includes('video')) return true\n}\n\nconst getFile = filePath => filePath.split('/').slice(-1)[0]\nconst getMediaSrc = assets => {\n  if (!assets) return null\n  const { media } = getProjectManifest(assets)\n  if (media.type.includes('video')) {\n    if (media.url) return media.url\n    if (media.file && media.file !== '/root/') {\n      return formatMedia(\n        assets.find(a => a.name === getFile(media.file)).content\n      )\n    }\n  }\n}\n\nconst getAvatarSrc = assets => {\n  if (!assets) return null\n  const { avatar } = getProjectManifest(assets)\n  if (!avatar || avatar === ROOT_PATH) return DEFAULT_AVATAR\n  if (avatar.includes('http')) return avatar\n  const type = getImageType(avatar)\n  return formatAvatar(\n    assets.find(a => a.name === getFile(avatar)).content,\n    type\n  )\n}\n\nfunction Project({ classes, match, profile, transfers, pledges, projectAddedEvents }) {\n  const projectId = match.params.id\n  const urlName = match.params[0]\n  const { account, projectAge, projectAssets, manifest } = useProjectData(projectId, projectAddedEvents)\n\n  const amountsPledged = useMemo(() => getAmountsPledged(pledges), [pledges, projectId])\n  const numberOfBackers = useMemo(() => getNumberOfBackers(pledges), [pledges, projectId])\n  const mediaType = useMemo(() => getMediaType(projectAssets), [projectAssets, projectId])\n  const mediaUrl = useMemo(() => getMediaSrc(projectAssets), [projectAssets, projectId])\n  const avatarUrl = useMemo(() => getAvatarSrc(projectAssets), [projectAssets, projectId])\n  const totalPledged = amountsPledged[0] ? amountsPledged[0][1] : 0\n  const percentToGoal = manifest ? Math.min(\n    (Number(totalPledged) / Number(manifest.goal)) * 100,\n    100\n  ) : 0\n  const profileType = profile[0] ? profile[0].type : urlName\n  const addr = profile[0] ? profile[0].addr.toUpperCase() : null\n  const accountUpper = account ? account.toUpperCase() : account\n  const userIsOwner = addr === accountUpper\n  const mediaSrc = mediaUrl || DEFAULT_AVATAR\n  console.log({profile, projectAssets, mediaUrl, mediaType, amountsPledged, pledges, transfers, match})\n  return (<Fragment>\n    {!projectAssets && <Loading/>}\n    {projectAssets && <div className={classes.root}>\n      <div className={classes.creator}>\n        <Avatar src={manifest && avatarUrl}/>\n        <Typography className={classes.creatorName}>{manifest && `By ${manifest.creator}`}</Typography>\n      </div>\n      <div>\n        <Typography className={classes.title} component=\"h2\" gutterBottom>\n          {manifest && manifest.title}\n        </Typography>\n        <Typography className={classes.subTitle} component=\"h5\" gutterBottom>\n          {manifest && manifest.subtitle}\n        </Typography>\n      </div>\n      <div className={classes.secondRow}>\n        {mediaType &&\n         <ReactPlayer width=\"100%\" height=\"100%\" url={mediaUrl} playing={manifest.media.isPlaying} controls/>}\n        {!mediaType && <CardMedia\n          component=\"img\"\n          alt=\"video\"\n          className={classes.media}\n          src={mediaSrc}\n          title=\"media-description\"\n        />}\n        <div className={classes.infoBox}>\n          {mediaUrl || avatarUrl ? <LinearProgress\n            classes={{\n              colorPrimary: classes.linearColorPrimary,\n              barColorPrimary: classes.linearBarColorPrimary,\n            }}\n            variant=\"determinate\"\n            value={percentToGoal}\n          /> : <LinearProgress/>}\n          <div className={classes.infoBoxSection}>\n            <span className={classes.raisedAmount}>\n              {`${totalPledged.toLocaleString()} ${amountsPledged[0] ? amountsPledged[0][0] : ''}`}\n            </span>\n            <span\n              className={classes.subtext}>{manifest && `pledged of ${Number(manifest.goal).toLocaleString()} goal`}</span>\n          </div>\n          <div className={classes.infoBoxSection}>\n            <span className={classes.infoText}>{numberOfBackers}</span>\n            <span className={classes.subtext}>backers</span>\n          </div>\n          <div className={classes.infoBoxSection}>\n            <span className={classes.infoText}>{projectAge}</span>\n            <span className={classes.subtext}>days active</span>\n          </div>\n          <div>\n            {!userIsOwner && <Link to={`/back-project/${projectId}`} className={classes.link}>\n              <Button color=\"primary\" variant=\"contained\" style={{height: '50px', width: '100%'}}>Back this {profileType}</Button>\n            </Link>}\n            {userIsOwner && <Link to={`/project-pledges/${projectId}`} className={classes.link}>\n              <Button color=\"primary\" variant=\"contained\" style={{height: '50px', width: '100%'}}>View project pledges</Button>\n            </Link>}\n          </div>\n        </div>\n      </div>\n      <div className={classes.fullWidth}>\n        <ReactMarkdown source={manifest && manifest.description} />\n      </div>\n    </div>}\n  </Fragment>)\n}\n\nProject.propTypes = {\n  classes: PropTypes.object.isRequired,\n  match: PropTypes.object,\n  profile: PropTypes.array.isRequired,\n}\n\nconst StyledProject = withStyles(styles)(Project)\nexport default withDatabase(withObservables(['match'], ({ database, match }) => ({\n  profile: database.collections.get('profiles').query(\n    Q.where('id_profile', match.params.id)\n  ).observe(),\n  transfers: database.collections.get('lp_events').query(\n    Q.where('event', 'Transfer')\n  ).observe(),\n  projectAddedEvents: database.collections.get('lp_events').query(\n    Q.where('event', 'ProjectAdded')\n  ).observe(),\n  pledges: database.collections.get('pledges').query(\n    Q.where('intended_project', match.params.id)\n  ).observe()\n}))(StyledProject))\n\n"],"sourceRoot":""}