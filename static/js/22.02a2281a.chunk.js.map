{"version":3,"sources":["../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/chart.js/dist/Chart.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_4__","_utils_helpers__WEBPACK_IMPORTED_MODULE_5__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_7__","_styles_useTheme__WEBPACK_IMPORTED_MODULE_8__","LinearProgress","a","forwardRef","props","ref","classes","classNameProp","className","_props$color","color","value","valueBuffer","_props$variant","variant","other","Object","theme","rootProps","inlineStyles","bar1","bar2","undefined","Math","round","transform","direction","concat","_transform","createElement","root","determinate","indeterminate","buffer","query","role","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","style","bar2Indeterminate","bar2Buffer","__webpack_exports__","getColor","palette","type","backgroundPrimary","primary","main","backgroundSecondary","secondary","position","overflow","height","colorPrimary","backgroundColor","colorSecondary","marginTop","width","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","left","bottom","top","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","animationDelay","@keyframes indeterminate1","0%","right","60%","100%","@keyframes indeterminate2","@keyframes buffer","opacity","50%","name","_Paper__WEBPACK_IMPORTED_MODULE_5__","Card","_props$raised","raised","elevation","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","CardContent","_props$component","component","Component","padding","&:last-child","paddingBottom","module","exports","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","convert","Converter","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","length","this","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","result","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","isArray","substr","isObject","isFinite","_isFinite","_x","apply","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","roundedRect","radius","moveTo","arc","closePath","rect","drawPoint","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","process","Doughnut","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","REACT_APP_NETWORK","ChartComponent","_React$Component","_this","handleOnClick","chartInstance","_this$props","onElementsClick","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","_React$Component2","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseIsEqual","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","iteratee","accumulator","baseEach"],"mappings":"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","file":"static/js/22.02a2281a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4\n    },\n\n    /* Styles applied to the root & bar2 element if `color=\"primary\"`; bar2 if `variant-\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root & bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` & `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` & `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the layered bar1 & bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) infinite',\n      animationDelay: '1.15s'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0px -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0px -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: you need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: you need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], classNameProp, {\n      determinate: classes.determinate,\n      indeterminate: classes.indeterminate,\n      buffer: classes.buffer,\n      query: classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      determinate: classes.bar1Determinate,\n      buffer: classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'buffer', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    _classCallCheck(this, ChartComponent);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this));\n\n    _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    };\n\n    _this.ref = function (element) {\n      _this.element = element;\n    };\n\n    _this.chartInstance = undefined;\n    return _this;\n  }\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type && next.data) {\n        // Be robust to no data. Relevant for other update mechanisms as in chartjs-plugin-streaming.\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}